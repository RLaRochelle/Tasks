install.packages("swirl")
library(swirl)
rm(list=ls())
install.packages("swirl")
library(swirl)
install.packages("swirl")
library(swirl)
library(swirl)
swirl()
getwd()
ls()
x<- 9
ls()
list.files()
?list.files
args(list.files)
old.dir<- getwd()
dir.create("testdir")
setwd()
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
list.files(getwd)
list.files(testdir)
list.files("testdir")
list.files()
files.exists()
files.exists("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest2.R")
file.rename("mytest.R")
?file.rename()
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path(folder1, folder2)
?file.path()
file.path(..., fsep = .Platform$file.sep)
file.path(folder1,folder2, fsep = .Platform$file.sep)
file.path("mytest3.R", "folder1", "folder2")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2")file.path()
dir.create("testdir2")
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd()
setwd("dir")
setwd("old.dir")
?setwd()
setwd(old.dir)
file.remove("testdir")
library(swirl)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq<- seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
library(swirl)
swirl()
x<- c(44,NA,5,NA)
x*3
y<- rnorm(1000)
z<- rep(NA,1000)
my_data<- sample(c(y,z),100)
my_na<- is.na(my_data)
my_na
my_data==NA
sum(my_na)
my_data
0/0
Inf-Inf
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[3,5,7])
c(x[1:3,5,7])
c(x[1:3], x[1:5], x[1:7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2<- c(11,2,NA)
names(vect2)<- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
library(swirl)
swirl()
my_vector<- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes()
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix()
?matrix
my_matrix2<- matrix(1:20,4,5)
identical(my_matrix,my_matrix2)
patients<- ("Bill","Gina","Kelly","Sean")
patients<- "Bill" "Gina" "Kelly" "Sean"
patients<- "Bill", "Gina", "Kelly", "Sean"
patients<- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients,my_matrix)
my_data<- data.frame(patients, my_matrix)
my_data
class(my_data)
names<- c("patient","age","weight","bp","rating","test")
names<- c("patient", "age", "weight", "bp", "rating", "test")
cnames<- c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data)<- cnames
my_data
library(swirl)
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5NOT=7
!(5=7)
NOT(5=7)
NOT(5==7)
!(5==7)
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5>8||6!=8&&4>3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints<-sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
Sys.Date()
mean(2,4,5)
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
submit()
submit()
submit()
submit()
submit()
my_mean(c(4,5,10))
sumbit()
sumbit()
sumbit()
submit()
submit()
?%%
submit()
submit()
submit()
submit()
submit()
info()
submit()
submit()
submit()
submit()
info()
bye()
swirl()
submit()
submit()
submit()
submit()
submit()
info()
skip()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
evaluate(standard_deviation(c(1,4,3.6,7.9,8.8)))
evaluate(sd(c(1,4,3.6,7.9,8.8)))
info()
skip()
evaluate(function(x){x+1},6)
evaluate(function(x){x[c(1)]}c(8,4,0))
evaluate(function(x){x[c(1)]},c(8,4,0))
evaluate(function(x){x[c(3)]},c(8,4,0))
evaluate(function(x){x[length(c)]}, c(8,4,0))
info()
skip()
?paste
paste("Programming","is","fun!")
submit()
telegram("almost","done")
submit()
submit()
mad_libs("Beckley","angry","statue")
submit()
submit()
submit()
submit()
"I"%p%"love"%p%"R!"
library(swirl)
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plot()
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist)
plot(x=cars$speed, y=cars$dist,xlab="speed")
plot(x=cars$speed, y=cars$dist, xlab="speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist,xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist,xlab="Speed", ylab="Stopping Distance")
plot(cars, main="My Plot")
plot(cars, sub="My Plot")
plot(cars, sub="My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim=c(10,15))
plot(cars, pch=2)
mtcars
data(mtcars)
?boxplot
boxplot(mpg~cyl, mtcars)
hist(mtcars$mpg)
